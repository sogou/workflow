name: ci build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  ubuntu-cmake:
    name: ubuntu
    runs-on: ubuntu-latest

    steps:
    - name: setup
      run: |
       sudo apt-get update
       sudo apt-get install -y cmake g++ libgtest-dev make libssl-dev
       sudo apt-get install -y valgrind
       sudo apt-get install -y libsnappy-dev libzstd-dev liblz4-dev
    - uses: actions/checkout@v2
    - name: make
      run: make KAFKA=y
    - name: make check
      run: make check KAFKA=y
    - name: make tutorial
      run: make tutorial KAFKA=y
      
  fedora-cmake:
    name: fedora
    runs-on: ubuntu-latest
    container:
      image: fedora:latest

    steps:
    - uses: actions/checkout@v3
    - run: cat /etc/os-release
    - name: install dependencies
      run: |
       sudo dnf -y update
       sudo dnf install -y cmake gcc-c++ gtest-devel make
       sudo dnf install -y openssl-devel valgrind
       sudo dnf install -y snappy-devel libzstd-devel lz4-devel zlib-devel
    - name: make
      run: make KAFKA=y
    - name: make check
      run: make check KAFKA=y
    - name: make tutorial
      run: make tutorial KAFKA=y

  freebsd-cmake:
    name: freebsd
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build and test on FreeBSD
      uses: vmactions/freebsd-vm@v1
      with:
        usesh: true
        mem: 2048
        copyback: false
        prepare: |
          pkg update -f
          pkg install -y cmake gmake gcc pkgconf openssl devel/googletest
          pkg install -y valgrind
          pkg install -y snappy zstd liblz4
        run: |
          freebsd-version
          gmake KAFKA=y
          gmake check KAFKA=y
          gmake tutorial KAFKA=y

  ubuntu-big-endian:
    name: ubuntu-big-endian
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        platforms: s390x

    - name: Test on s390x (Big-Endian)
      run: |
        docker run --rm --platform linux/s390x \
          -v ${{ github.workspace }}:/workspace \
          -w /workspace \
          --entrypoint="" \
          s390x/ubuntu:20.04 \
          /bin/bash -c "
            set -e
            echo '=== IBM s390x Big Endian Test ==='

            # Avoid conversation
            export DEBIAN_FRONTEND=noninteractive
            export TZ=UTC

            echo '=== Install Dependencies ==='
            apt-get update
            apt-get install -y --no-install-recommends cmake g++ libgtest-dev make libssl-dev
            apt-get install -y --no-install-recommends valgrind || echo 'skip valgrind'
            apt-get install -y --no-install-recommends zlib1g-dev python3
            apt-get install -y libc6-dev

            echo '=== Test Byte Order and Architecture ==='
            uname -m
            python3 -c 'import sys; print(f\"Byte Order: {sys.byteorder} Endian\")' || echo 'Failed to check Byte Order!'

            echo '=== Compile Workflow Library and Header ==='
            make

            echo '=== Run Test ==='
            # Skip IO task and memory check
            cd test && mkdir -p build.cmake && cd build.cmake && cmake .. && make task_unittest algo_unittest http_unittest redis_unittest mysql_unittest facilities_unittest graph_unittest memory_unittest upstream_unittest dns_unittest resource_unittest uriparser_unittest && GTEST_FILTER=\"-facilities_unittest.fileIO:task_unittest.WFFileIOTask:task_unittest.WFFilePathIOTask\" ctest -E \".*-memory-check\" --output-on-failure
            cd ../../

            echo '=== Compile Tutorial ==='
            make tutorial

            echo '=== Finish s390x Big Endian Test ==='
          "
